{
	"name": "df_sweden_population",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_raw_hospital_admissions",
						"type": "DatasetReference"
					},
					"name": "population"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "sweden_populatoin",
						"type": "DatasetReference"
					},
					"name": "swedenpopulation"
				},
				{
					"dataset": {
						"referenceName": "worldwidepopulation",
						"type": "DatasetReference"
					},
					"name": "worldwidepopulation"
				}
			],
			"transformations": [
				{
					"name": "Sweden"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          indicator as string,",
				"          date as string,",
				"          year_week as string,",
				"          value as string,",
				"          source as string,",
				"          url as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> population",
				"population split(country==\"Sweden\",",
				"     disjoint: false) ~> Sweden@(Sweden, Worldwide)",
				"Sweden@Sweden sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          country as string,",
				"          country_code_2_digit as string,",
				"          country_code_3_digit as string,",
				"          population as string,",
				"          age_group_0_14 as string,",
				"          age_group_15_24 as string,",
				"          age_group_25_49 as string,",
				"          age_group_50_64 as string,",
				"          age_group_65_79 as string,",
				"          age_group_80_max as string",
				"     ),",
				"     partitionFileNames:['swedenpopulation.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> swedenpopulation",
				"Sweden@Worldwide sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     partitionBy('hash', 1)) ~> worldwidepopulation"
			]
		}
	}
}